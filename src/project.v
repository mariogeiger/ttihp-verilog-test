/*
 * Copyright (c) 2024 Mario Geiger
 * SPDX-License-Identifier: Apache-2.0
 * 
 * Auto-generated from Amaranth design
 */

`default_nettype none

module tt_um_blinky (
    input  wire [7:0] ui_in,    // Dedicated inputs
    output wire [7:0] uo_out,   // Dedicated outputs
    input  wire [7:0] uio_in,   // IOs: Input path
    output wire [7:0] uio_out,  // IOs: Output path
    output wire [7:0] uio_oe,   // IOs: Enable path (active high: 0=input, 1=output)
    input  wire       ena,      // always 1 when the design is powered, so you can ignore it
    input  wire       clk,      // clock
    input  wire       rst_n     // reset_n - low to reset
);

  // Internal signals for the Amaranth-generated core
  wire rst = !rst_n;  // Convert active-low reset to active-high
  wire core_led;
  
  // Instantiate the Amaranth-generated core module
  top core (
    .clk(clk),
    .rst(rst),
    .led(core_led)
  );
  
  // Connect core LED output to Tiny Tapeout output
  assign uo_out[0] = core_led;
  
  // All other output pins must be assigned to 0 when not used
  assign uo_out[7:1] = 7'b0;
  assign uio_out = 8'b0;
  assign uio_oe  = 8'b0;

  // List all unused inputs to prevent warnings
  wire _unused = &{ena, ui_in, uio_in, 1'b0};

endmodule

// Amaranth-generated core module
/* Generated by Amaranth Yosys 0.50 (PyPI ver 0.50.0.0.post115, git sha1 b5170e139) */

(* top =  1  *)
(* src = "/home/runner/work/ttihp-verilog-test/ttihp-verilog-test/src/design.py:11" *)
(* generator = "Amaranth" *)
module top(rst, led, clk);
  reg \$auto$verilog_backend.cc:2355:dump_module$1  = 0;
  wire [24:0] \$1 ;
  reg [23:0] \$2 ;
  (* src = "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/runner/work/ttihp-verilog-test/ttihp-verilog-test/src/design.py:12" *)
  reg [23:0] cnt = 24'h000000;
  (* src = "/home/runner/work/ttihp-verilog-test/ttihp-verilog-test/src/design.py:8" *)
  output led;
  wire led;
  (* src = "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  assign \$1  = cnt + (* src = "/home/runner/work/ttihp-verilog-test/ttihp-verilog-test/src/design.py:13" *) 2'h2;
  (* src = "/home/runner/work/ttihp-verilog-test/ttihp-verilog-test/src/design.py:12" *)
  always @(posedge clk)
    cnt <= \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$1 ) begin end
    \$2  = \$1 [23:0];
    if (rst) begin
      \$2  = 24'h000000;
    end
  end
  assign led = cnt[23];
endmodule

